name: Update Devotions via Perplexity API

on:
  schedule:
    - cron: '0 7 * * *'  # daily at 07:00 UTC
  workflow_dispatch:

env:
  PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
  MODEL:            "sonar-reasoning"
  MAX_TOKENS:       1500
  TRIM_CHARS:       4000

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Task 1: Generate raw exegesis
      - name: Fetch raw exegesis (Task 1)
        run: |
          cat << EOF > payload1.json
          {
            "prompt": "Provide a daily exegesis of the Roman Catholic readings, psalms, and saint of the day; begin with a single summary quote with citation (e.g. Gn 1:15), followed by a theological summary of the day’s reflections and applications, then a 3–5 sentence summary of each category (first readings, psalm, gospel saint). After that, include a section titled \"Detailed Scriptural Exegesis:\" and write an in-depth, paragraph-length exegesis of the scriptural passages with historical context. End with an original summary prayer encompassing the day's overarching spiritual messages.",
            "model":    "${MODEL}",
            "max_tokens": ${MAX_TOKENS}
          }
          EOF
          jq . payload1.json
          curl -s https://api.perplexity.ai/completions \
            -H "Authorization: Bearer ${PERPLEXITY_API_KEY}" \
            -H "Content-Type: application/json" \
            -d @payload1.json \
            -o task1_raw.json

      - name: Extract raw text (trimmed)
        run: |
          jq -r .completion_text task1_raw.json > raw_exegesis.txt
          head -c ${TRIM_CHARS} raw_exegesis.txt > raw_trimmed.txt

      # Task 2: Detailed Exegesis → public/devotions-full.json
      - name: Detailed Exegesis (Task 2)
        run: |
          cat << EOF > payload2.json
          {
            "prompt": "Extract the section starting with \"Detailed Scriptural Exegesis:\" and everything after it from the raw devotional text. Return it as a JSON object with key \"exegesis\". Raw text:\\n$(sed 's/"/\\"/g' raw_trimmed.txt)",
            "model":    "${MODEL}",
            "max_tokens": ${MAX_TOKENS}
          }
          EOF
          jq . payload2.json
          curl -s https://api.perplexity.ai/completions \
            -H "Authorization: Bearer ${PERPLEXITY_API_KEY}" \
            -H "Content-Type: application/json" \
            -d @payload2.json \
            -o devotions-full.json

      # Task 3: Feed JSON → public/devotions.json
      - name: Feed JSON (Task 3)
        run: |
          cat << EOF > payload3.json
          {
            "prompt": "From the raw devotional text, extract and return these fields in a JSON object: date, quote, quoteCitation, firstReading, psalmSummary, gospelSummary, saintReflection, dailyPrayer, theologicalSynthesis. Do NOT include the Detailed Scriptural Exegesis section. Raw text:\\n$(sed 's/"/\\"/g' raw_trimmed.txt)",
            "model":    "${MODEL}",
            "max_tokens": ${MAX_TOKENS}
          }
          EOF
          jq . payload3.json
          curl -s https://api.perplexity.ai/completions \
            -H "Authorization: Bearer ${PERPLEXITY_API_KEY}" \
            -H "Content-Type: application/json" \
            -d @payload3.json \
            -o devotions.json

      - name: Publish JSON files
        run: |
          mkdir -p public
          mv devotions-full.json public/devotions-full.json
          mv devotions.json      public/devotions.json

      - name: Debug generated JSON
        run: |
          echo "=== public/devotions.json ==="
          cat public/devotions.json || echo "(missing or empty)"
          echo
          echo "=== public/devotions-full.json ==="
          cat public/devotions-full.json || echo "(missing or empty)"

      - name: Set up Python for validation
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install validation tools
        run: pip install jsonschema

      - name: Run advanced JSON validation
        run: ./scripts/validate_devotions_advanced.py

      - name: Archive and commit
        run: |
          today=$(date -u +%F)
          mkdir -p archive/public/daily/$today
          cp public/devotions.json        archive/public/daily/$today/
          cp public/devotions-full.json   archive/public/daily/$today/
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public/devotions*.json archive/public/daily/$today/*
          if ! git diff --cached --quiet; then
            git commit -m "Daily devotions: $today"
            git push
          else
            echo "No changes to commit."
          fi