name: Update Daily Devotion (weekly â†’ daily passthrough)

on:
  workflow_dispatch: {}   # manual only

jobs:
  update-devotion:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      APP_TZ: America/New_York

    steps:
      - name: Checkout repo (main, full history)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build public/devotions.json from public/weeklyfeed.json
        run: |
          python3 - <<'PY'
          import json, os, pathlib
          from datetime import datetime, date
          try:
              from zoneinfo import ZoneInfo
          except Exception:
              ZoneInfo = None

          src = pathlib.Path("public/weeklyfeed.json")
          if not src.exists():
              raise SystemExit("ERROR: public/weeklyfeed.json not found")

          data = json.loads(src.read_text(encoding="utf-8"))
          if not isinstance(data, list):
              raise SystemExit("ERROR: public/weeklyfeed.json must be a top-level list")

          tz = os.environ.get("APP_TZ","America/New_York")
          today = (datetime.now(ZoneInfo(tz)).date() if ZoneInfo else date.today())

          def parse(x):
              try: return datetime.fromisoformat(str(x)).date()
              except: return None

          by = {}
          for row in data:
              if not isinstance(row, dict): 
                  continue
              dts = parse(row.get("date"))
              if dts:
                  by[dts] = row

          if not by:
              raise SystemExit("ERROR: weeklyfeed has no valid date rows")

          pick = by.get(today)
          if pick is None:
              past = [k for k in by if k <= today]
              pick = by[max(past)] if past else list(by.values())[-1]

          outp = pathlib.Path("public/devotions.json")
          outp.write_text(json.dumps(pick, ensure_ascii=False, indent=2), encoding="utf-8")
          print("[daily] wrote", outp, "for", pick.get("date"))
          PY

      - name: Show public/devotions.json
        run: head -n 60 public/devotions.json || true

      - name: Commit and push changes
        if: github.ref == 'refs/heads/main'
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public/devotions.json || true
          if ! git diff --cached --quiet; then
            git commit -m "Daily: publish devotions.json from weeklyfeed.json"
            git push
          else
            echo "No changes to commit."
          fi
