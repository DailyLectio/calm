name: Generate Weekly Devotions (Friâ€“Thu)

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: "Start date (YYYY-MM-DD). Blank = script default"
        required: false
        default: ""
      days:
        description: "How many days (default 7)"
        required: false
        default: "7"

concurrency:
  group: generate-weekly
  cancel-in-progress: true

jobs:
  gen-weekly:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_PROJECT: ${{ secrets.OPENAI_PROJECT }}
      GH_PAT: ${{ secrets.GH_PAT }}
      APP_TZ: America/New_York
      GEN_MODEL: gpt-5-mini
      GEN_FALLBACK: gpt-5-mini
      GEN_TEMP: "1"
      GEN_TEMP_REPAIR: "1"
      GEN_TEMP_QUOTE: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 jsonschema openai
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Syntax check generate_weekly.py
        run: |
          python - <<'PY'
          import ast, pathlib
          p = pathlib.Path('scripts/generate_weekly.py')
          ast.parse(p.read_text(encoding='utf-8'))
          print("Syntax OK")
          PY

      - name: Show existing weeklyfeed.json (if present)
        run: |
          if [ -f public/weeklyfeed.json ]; then
            echo "SHA: $GITHUB_SHA"
            head -n 60 public/weeklyfeed.json
          else
            echo "No existing public/weeklyfeed.json (first run?)"
          fi

      - name: USCCB precheck (no OpenAI calls)
        timeout-minutes: 2
        continue-on-error: true
        env:
          USCCB_PRECHECK: "1"
          START_DATE: ${{ github.event.inputs.start_date }}
          DAYS: ${{ github.event.inputs.days }}
        run: |
          set +e
          python scripts/generate_weekly.py || true
          echo "::warning::USCCB precheck may time out (network/markup changes). Continuing."

      - name: Generate weeklyfeed.json
        env:
          TZ: America/New_York
          START_DATE: ${{ github.event.inputs.start_date }}
          DAYS: ${{ github.event.inputs.days }}
          USCCB_STRICT: "0"
        run: |
          set -euo pipefail
          python scripts/generate_weekly.py

      - name: Debug invalid rows (types/keys)
        run: |
          python - <<'PY'
          import json
          d=json.load(open('public/weeklyfeed.json','r',encoding='utf-8'))
          req=["date","quote","quoteCitation","firstReading","secondReading",
               "psalmSummary","gospelSummary","saintReflection","dailyPrayer",
               "theologicalSynthesis","exegesis","usccbLink","cycle","weekdayCycle",
               "feast","gospelReference","firstReadingRef","secondReadingRef",
               "psalmRef","gospelRef","lectionaryKey"]
          bad=[]
          for i,row in enumerate(d,1):
            miss=[k for k in req if k not in row]
            types=[k for k in ["secondReading","secondReadingRef","feast"] if not isinstance(row.get(k,""),str)]
            if miss or types:
              bad.append({"index":i,"missing":miss,"bad_types":{k:type(row.get(k)).__name__ for k in types}})
          print("length:",len(d))
          if bad: print("Problems:", bad)
          else: print("No key/type problems found.")
          PY

      - name: Validate weeklyfeed.json shape & fields
        run: |
          set -euo pipefail
          test -f public/weeklyfeed.json
          jq 'length==7' public/weeklyfeed.json >/dev/null
          jq -e 'all(.[]; has("date") and has("quote") and has("quoteCitation") and has("firstReading") and has("psalmSummary") and has("gospelSummary") and has("saintReflection") and has("dailyPrayer") and has("theologicalSynthesis") and has("exegesis") and has("secondReading") and has("tags") and has("usccbLink") and has("cycle") and has("weekdayCycle") and has("feast") and has("gospelReference") and has("firstReadingRef") and has("secondReadingRef") and has("psalmRef") and has("gospelRef") and has("lectionaryKey"))' public/weeklyfeed.json >/dev/null
          jq -e 'all(.[]; (.cycle|tostring|startswith("Year ")) and (.weekdayCycle|tostring|startswith("Cycle ")))' public/weeklyfeed.json >/dev/null
          jq -e 'all(.[]; (.secondReading|type=="string") and (.feast|type=="string") and (.secondReadingRef|type=="string"))' public/weeklyfeed.json >/dev/null

      - name: Commit and push weeklyfeed.json (safe)
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add public/weeklyfeed.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "chore: weeklyfeed update (auto)"
          git fetch origin main
          git -c rebase.autoStash=true pull --rebase origin main
          git push origin HEAD:main
